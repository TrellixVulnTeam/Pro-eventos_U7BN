{"version":3,"sources":["./src/app/components/contatos/contatos.component.ts","./src/app/components/contatos/contatos.component.html","./src/app/helpers/DateTimeFormat.pipe.ts","./src/app/services/lote.service.ts","./src/app/util/Constants.ts","./src/environments/environment.ts","./src/app/components/eventos/eventos.component.ts","./src/app/components/eventos/eventos.component.html","./src/app/shared/nav/nav.component.html","./src/app/shared/nav/nav.component.ts","./src/app/components/eventos/evento-lista/evento-lista.component.html","./src/app/components/eventos/evento-lista/evento-lista.component.ts","./src/app/components/user/registration/registration.component.ts","./src/app/components/user/registration/registration.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/eventos/evento-detalhe/evento-detalhe.component.ts","./src/app/components/eventos/evento-detalhe/evento-detalhe.component.html","./src/app/helpers/ValidatorField.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/titulo/titulo.component.html","./src/app/shared/titulo/titulo.component.ts","./src/app/app.module.ts","./src/app/components/user/login/login.component.ts","./src/app/components/user/login/login.component.html","./src/app/services/evento.service.ts","./src/app/components/palestrantes/palestrantes.component.ts","./src/app/components/palestrantes/palestrantes.component.html","./src/app/components/user/perfil/perfil.component.ts","./src/app/components/user/perfil/perfil.component.html","./src/app/app-routing.module.ts","./src/app/components/user/user.component.ts","./src/app/components/user/user.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contatos',\n  templateUrl: './contatos.component.html',\n  styleUrls: ['./contatos.component.scss']\n})\nexport class ContatosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-titulo [titulo]=\"'Contatos'\"></app-titulo>\n\n","import { Constants } from './../util/Constants';\nimport { DatePipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'DateFormatPipe',\n})\nexport class DateTimeFormatPipe extends DatePipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    return super.transform(value, Constants.DATE_TIME_FMT);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Lote } from '@app/models/Lote';\n\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class LoteService {\n  baseURL = 'https://localhost:5001/api/lotes';\n\n  constructor(private http: HttpClient) {}\n\n  public getLotesByEventoId(eventoId: number): Observable<Lote[]> {\n    return this.http.get<Lote[]>(`${this.baseURL}/${eventoId}`).pipe(take(1));\n  }\n\n  public saveLote(eventoId: number, lotes: Lote[]): Observable<Lote[]> {\n    return this.http\n      .put<Lote[]>(`${this.baseURL}/${eventoId}`, lotes)\n      .pipe(take(1));\n  }\n\n  public deleteLote(eventoId: number, loteId: number): Observable<any> {\n    return this.http\n      .delete(`${this.baseURL}/${eventoId}/${loteId}`)\n      .pipe(take(1));\n  }\n}\n","export class Constants {\n  static readonly DATE_FMT = 'dd/MM/yyyy';\n  static readonly DATE_TIME_FMT = `${Constants.DATE_FMT} hh:mm a`;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-eventos',\n  templateUrl: './eventos.component.html',\n  styleUrls: ['./eventos.component.scss'],\n  // providers: [EventoService]\n})\nexport class EventosComponent implements OnInit {\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<app-titulo [titulo]=\"'Eventos'\" [iconClass]=\"'fa fa-calendar-alt'\" [botaoListar]=\"true\">\n</app-titulo>\n<router-outlet></router-outlet>\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-white shadow-sm\" *ngIf=\"showMenu()\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"dashboard\">\n      <i class=\"fa fa-users mb-2\"></i>\n    </a>\n    <button class=\"navbar-toggler\" (click)=\"isCollapsed = !isCollapsed\" type=\"button\" data-bs-toggle=\"collapse\"\n      data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" [collapse]=\"isCollapsed\" [isAnimated]=\"true\" id=\"navbarNav\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" aria-current=\"page\" routerLink=\"eventos/lista\">Eventos</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"palestrantes\">Palestrantes</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"contatos\">Contatos</a>\n        </li>\n      </ul>\n\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item dropdown\" dropdown>\n          <a dropdownToggle class=\"nav-link dropdown-toggle\" style=\"cursor: pointer;\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\"\n            aria-haspopup=\"true\" aria-expanded=\"false\">\n            Vinícius\n          </a>\n          <div *dropdownMenu class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n            <a class=\"dropdown-item\" routerLink=\"user/perfil\">\n              Perfil\n            </a>\n            <div role=\"separator\" class=\"divider\"></div>\n            <a class=\"dropdown-item\" routerLink=\"user/login\">\n              Sair\n            </a>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n  isCollapsed = true;\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  showMenu(): boolean {\n    return this.router.url !== '/user/login';\n  }\n\n}\n","\n<div class=\"card rounded shadow-sm p-3\">\n\n  <div class=\"d-flex\">\n    <div class=\"flex-fill pr-3\">\n      <div class=\"input-group mb-2\">\n        <div class=\"input-group-prepend\">\n          <div class=\"input-group-text\">Filtro: </div>\n        </div>\n        <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"Filtrar por Tema e Local\"\n        [(ngModel)]=\"filtroLista\"\n        >\n      </div>\n    </div>\n    <div>\n      <a class=\"d-flex btn btn-outline-primary\" routerLink=\"/eventos/detalhe\">\n        <i class=\"fa fa-plus-circle my-1\"></i>\n        <b class=\"ml-1 d-none d-sm-block\">Novo</b>\n      </a>\n    </div>\n    </div>\n  <!-- <h3>Filtro: {{filtroLista}}</h3> -->\n  <table class=\"table table-striped table-hover\">\n    <thead class=\"thead-dark\">\n      <tr>\n        <th class=\"d-none d-md-table-cell\">\n          <button type=\"button\" class=\"btn btn-outline-light btn-sm\"\n          (click)=\"alterarImagem()\">\n          <i class=\"{{!exibirImagem ? 'fa fa-eye' : 'fa fa-eye-slash'}}\"></i>\n          {{!exibirImagem ? 'exibir' : 'ocultar'}}\n        </button>\n      </th>\n      <th>#</th>\n      <th>Tema</th>\n      <th class=\"d-none d-md-table-cell\">Local</th>\n      <th>Data</th>\n      <th class=\"d-none d-md-table-cell\">Qtd Pessoas</th>\n      <th class=\"d-none d-md-table-cell\">Lote</th>\n      <th>Opções</th>\n    </tr>\n  </thead>\n  <tbody *ngIf=\"eventos && eventos.length\">\n    <tr *ngFor=\"let evento of eventosFiltrados\" (click)=\"detalheEvento(evento.id)\" style=\"cursor: pointer;\">\n      <td class=\"d-none d-md-table-cell\">\n        <img [collapse]=\"!exibirImagem\"\n        [isAnimated]=\"true\"\n        src=\"/assets/{{evento.imagemURL}}\"\n        [style.width.px]=\"larguraImagem\"\n        [style.margin.px]=\"margemImagem\"\n        >\n      </td>\n      <td>{{evento.id}}</td>\n      <td>{{evento.tema}}</td>\n      <td class=\"d-none d-md-table-cell\">{{evento.local}}</td>\n      <td>{{evento.dataEvento | DateFormatPipe}}</td>\n      <td class=\"d-none d-md-table-cell\">{{evento.qtdPessoas}}</td>\n      <td class=\"d-none d-md-table-cell\">{{evento.lotes[0]?.nome | uppercase}}</td>\n      <td>\n        <button type=\"button\" class=\"btn btn-danger btn-lg\" tooltip=\"Excluir\" (click)=\"openModal($event, template, evento.id)\">\n          <i class=\"fa fa-trash\"></i>\n        </button>\n      </td>\n    </tr>\n  </tbody>\n  <tfoot *ngIf=\"!eventos.length\">\n    <tr>\n      <td colspan=\"8\" class=\"text-center\">\n        <h4>Nenhum evento encontrado!</h4>\n      </td>\n    </tr>\n  </tfoot>\n</table>\n\n</div>\n\n<!-- {{eventos | json}} -->\n\n<ng-template #template>\n  <div class=\"modal-body text-center\">\n    <p>Tem certeza que quer deletar o Evento de Código {{this.eventoId}}?</p>\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"confirm()\">Sim</button>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"decline()\">Não</button>\n  </div>\n</ng-template>\n","import { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Component, OnInit, TemplateRef } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { ToastrService } from 'ngx-toastr';\nimport { Evento } from '@app/models/Evento';\nimport { EventoService } from '@app/services/evento.service';\n\n@Component({\n  selector: 'app-evento-lista',\n  templateUrl: './evento-lista.component.html',\n  styleUrls: ['./evento-lista.component.scss']\n})\nexport class EventoListaComponent implements OnInit {\n\n  modalRef: BsModalRef;\n  public eventos: Evento[] = [];\n  public eventosFiltrados: Evento[] = [];\n  public eventoId = 0;\n\n  public larguraImagem = 150;\n  public margemImagem = 2;\n  public exibirImagem = true;\n  private filtroListado = '';\n\n  public get filtroLista(): string {\n    return this.filtroListado;\n  }\n\n  public set filtroLista(value: string) {\n    this.filtroListado = value;\n    this.eventosFiltrados = this.filtroLista ? this.filtrarEventos(this.filtroLista) : this.eventos;\n  }\n\n  public filtrarEventos(filtrarPor: string): Evento[] {\n    filtrarPor = filtrarPor.toLocaleLowerCase();\n    return this.eventos.filter(\n      evento => evento.tema.toLocaleLowerCase().indexOf(filtrarPor) !== -1 ||\n      evento.local.toLocaleLowerCase().indexOf(filtrarPor) !== -1\n    );\n  }\n\n  constructor(\n    private eventoService: EventoService,\n    private modalService: BsModalService,\n    private toastr: ToastrService,\n    private spinner: NgxSpinnerService,\n    private router: Router\n  ) { }\n\n  public ngOnInit(): void {\n    this.spinner.show();\n    this.carregarEventos();\n  }\n\n  public alterarImagem(): void {\n    this.exibirImagem = !this.exibirImagem;\n  }\n\n  public carregarEventos(): void {\n    this.eventoService.getEventos().subscribe({\n      next: (eventos: Evento[]) => {\n        this.eventos = eventos;\n        this.eventosFiltrados = this.eventos;\n      },\n      error: (error: any) => {\n        this.spinner.hide();\n        this.toastr.error('Erro ao Carregar os Eventos', 'Erro!');\n      },\n      complete: () => this.spinner.hide()\n    });\n  }\n\n  openModal(event: any, template: TemplateRef<any>, eventoId: number): void {\n    event.stopPropagation();\n    this.eventoId = eventoId;\n    this.modalRef = this.modalService.show(template, {class: 'modal-sm'});\n  }\n\n  confirm(): void {\n    this.modalRef.hide();\n    this.spinner.show();\n\n    this.eventoService.deleteEvento(this.eventoId).subscribe(\n      (result: any) => {\n        if (result.message === 'Deletado') {\n          this.toastr.success('O Evento foi deletado com Sucesso.', 'Deletado!');\n          this.carregarEventos();\n        }\n      },\n      (error: any) => {\n        console.error(error);\n        this.toastr.error(`Erro ao tentar deletar o evento ${this.eventoId}`, 'Erro');\n      }\n    ).add(() => this.spinner.hide());\n  }\n\n  decline(): void {\n    this.modalRef.hide();\n  }\n\n  detalheEvento(id: number): void{\n    this.router.navigate([`eventos/detalhe/${id}`]);\n  }\n\n}\n","import { ValidatorField } from './../../../helpers/ValidatorField';\nimport { AbstractControlOptions, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})\nexport class RegistrationComponent implements OnInit {\n\n  form!: FormGroup;\n\n  constructor(public fb: FormBuilder) { }\n\n  get f(): any { return this.form.controls; }\n\n  ngOnInit(): void {\n    this.validation();\n  }\n\n  private validation(): void {\n\n    const formOptions: AbstractControlOptions = {\n      validators: ValidatorField.MustMatch('senha', 'confirmeSenha')\n    };\n\n    this.form = this.fb.group({\n      primeiroNome: ['', Validators.required],\n      ultimoNome: ['', Validators.required],\n      email: ['',\n        [Validators.required, Validators.email]\n      ],\n      userName: ['', Validators.required],\n      senha: ['',\n        [Validators.required, Validators.minLength(6)]\n      ],\n      confirmeSenha: ['', Validators.required],\n    }, formOptions);\n  }\n\n}\n","<div class=\"row mt-4\">\n\n\t<div class=\"col-md-6 d-none d-md-block\" style=\"height: 450px;\">\n\t\t<div class=\"text-center col-md-12 my-auto side-heder\">\n\t\t\t<h1>Cadastro de Usuário</h1>\n\t\t\t<img src=\"../../../../assets/registerImage.png\" class=\"my-4\" alt=\"\" width=\"400px\">\n\t\t</div>\n\t</div>\n\n\t<div class=\"col-md-6\">\n\n    <form [formGroup]=\"form\" class=\"p-1\">\n      <div class=\"pb-2 d-block d-md-none\">\n        <h3 class=\"border-bottom\">Cadastro de Usuário</h3>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-sm-6\">\n          <label>Primeiro Nome</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"primeiroNome\"\n            [ngClass]=\"{'is-invalid': f.primeiroNome.errors && f.primeiroNome.touched}\" placeholder=\"Insira o Primeiro nome\" />\n          <div class=\"invalid-feedback\">\n            Primeiro Nome é obrigatório.\n          </div>\n        </div>\n        <div class=\"form-group col-sm-6\">\n          <label>Último nome</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"ultimoNome\"\n            [ngClass]=\"{'is-invalid': f.ultimoNome.errors && f.ultimoNome.touched}\" placeholder=\"Insira o Último nome\" />\n          <div class=\"invalid-feedback\">\n            Último Nome é obrigatório.\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"\">Email:</label>\n        <input class=\"form-control\" type=\"text\" formControlName=\"email\"\n          [ngClass]=\"{'is-invalid': f.email.errors && f.email.touched}\" placeholder=\"Insira o Nome Completo\" />\n        <div *ngIf=\"f.email.errors?.required && f.email.touched\" class=\"invalid-feedback\">\n          e-mail é obrigatório.\n        </div>\n        <div *ngIf=\"f.email.errors?.email && f.email.touched\" class=\"invalid-feedback\">\n          Deve ser um e-mail válido.\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"\">Usuario:</label>\n        <input class=\"form-control\" type=\"text\" formControlName=\"userName\"\n          [ngClass]=\"{'is-invalid': f.userName.errors && f.userName.touched}\" placeholder=\"Insira o nome de Usuário\" />\n        <div class=\"invalid-feedback\">\n          Usuário é obrigatório.\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-sm-6\">\n          <label for=\"\">Senha:</label>\n          <input class=\"form-control\" type=\"password\" formControlName=\"senha\"\n            [ngClass]=\"{'is-invalid': f.senha.errors && f.senha.touched}\" placeholder=\"Digite uma Senha\" />\n          <div *ngIf=\"f.senha.errors?.required && f.senha.touched\"\n          class=\"invalid-feedback\">\n            Senha é obrigatório.\n          </div>\n          <div *ngIf=\"f.senha.errors?.minlength && f.senha.touched\"\n          class=\"invalid-feedback\">\n            Deve conter no mínimo 6 caracteres.\n          </div>\n        </div>\n        <div class=\"form-group col-sm-6\">\n          <label for=\"\">Confirmar Senha:</label>\n          <input class=\"form-control\" type=\"password\" formControlName=\"confirmeSenha\"\n            [ngClass]=\"{'is-invalid': f.confirmeSenha.errors && f.confirmeSenha.touched}\" placeholder=\"Confirme a Senha\" />\n          <div *ngIf=\"f.confirmeSenha.errors?.required\"\n            class=\"invalid-feedback\">\n            Confirmar Senha é obrigatório.\n          </div>\n          <div *ngIf=\"f.confirmeSenha.errors?.mustMatch\"\n            class=\"invalid-feedback\">\n            Repedir a senha é obrigatório.\n          </div>\n        </div>\n      </div>\n      <div class=\"form-row p-1 mb-3\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\n          <label class=\"custom-control-label\">Eu concordo com os <a href=\"#\">Termos de Uso</a>.</label>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-12\">\n          <button class=\"btn btn-lg btn-success btn-block px-5\">\n            Registar\n          </button>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-12\">\n          <a class=\"btn btn-link btn-block\" routerLink=\"/user/login\">\n            Já sou Cadastrado\n          </a>\n        </div>\n      </div>\n    </form>\n\n\t</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-titulo [titulo]=\"'Dashboard'\"></app-titulo>\n\n","import { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Component, OnInit, TemplateRef } from '@angular/core';\nimport { AbstractControl,\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { BsLocaleService } from 'ngx-bootstrap/datepicker';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\nimport { LoteService } from './../../../services/lote.service';\nimport { EventoService } from '@app/services/evento.service';\nimport { Evento } from '@app/models/Evento';\nimport { Lote } from '@app/models/Lote';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-evento-detalhe',\n  templateUrl: './evento-detalhe.component.html',\n  styleUrls: ['./evento-detalhe.component.scss'],\n  providers: [ DatePipe ]\n})\nexport class EventoDetalheComponent implements OnInit {\n  modalRef: BsModalRef;\n  eventoId: number;\n  evento = {} as Evento;\n  form: FormGroup;\n  estadoSalvar = 'post';\n  loteAtual = {id: 0, nome: '', indice: 0};\n\n  get modoEditar(): boolean {\n    return this.estadoSalvar === 'put';\n  }\n\n  get lotes(): FormArray {\n    return this.form.get('lotes') as FormArray;\n  }\n\n  get f(): any {\n    return this.form.controls;\n  }\n\n  get bsConfig(): any {\n    return {\n      adaptivePosition: true,\n      dateInputFormat: 'DD/MM/YYYY hh:mm a',\n      containerClass: 'theme-default',\n      showWeekNumbers: false\n    };\n  }\n\n  constructor(private fb: FormBuilder,\n              private localeService: BsLocaleService,\n              private activatedRouter: ActivatedRoute,\n              private eventoService: EventoService,\n              private spinner: NgxSpinnerService,\n              private toastr: ToastrService,\n              private modalService: BsModalService,\n              private router: Router,\n              private loteService: LoteService,\n              private datePipe: DatePipe)\n  {\n    this.localeService.use('pt-br');\n  }\n\n  public carregarEvento(): void {\n    this.eventoId = +this.activatedRouter.snapshot.paramMap.get('id');\n\n    if (this.eventoId !== null && this.eventoId !== 0) {\n      this.spinner.show();\n\n      this.estadoSalvar = 'put';\n\n      this.eventoService.getEventoById(this.eventoId).subscribe(\n        (evento: Evento) => {\n          this.evento = {...evento};\n          this.form.patchValue(this.evento);\n          this.carregarLotes();\n        },\n        (error: any) => {\n          this.toastr.error('Erro ao tentar carregar Evento.', 'Erro!');\n          console.error(error);\n        }\n      ).add(() => this.spinner.hide());\n    }\n  }\n\n  public carregarLotes(): void {\n    this.loteService.getLotesByEventoId(this.eventoId).subscribe(\n      (lotesRetorno: Lote[]) => {\n        lotesRetorno.forEach(lote => {\n          this.lotes.push(this.criarLote(lote));\n        });\n      },\n      (error: any) => {\n        this.toastr.error('Erro ao tentar carregar lotes', 'Erro');\n        console.error(error);\n      }\n    ).add(() => this.spinner.hide());\n  }\n\n  ngOnInit(): void {\n    this.carregarEvento();\n    this.validation();\n  }\n\n  public validation(): void {\n    this.form = this.fb.group({\n      tema: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]],\n      local: ['', Validators.required],\n      dataEvento: ['', Validators.required],\n      qtdPessoas: ['', [Validators.required, Validators.max(120000)]],\n      telefone: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      imagemURL: ['', Validators.required],\n      lotes: this.fb.array([])\n    });\n  }\n\n  adicionarLote(): void {\n    this.lotes.push(this.criarLote({id: 0} as Lote));\n  }\n\n  criarLote(lote: Lote): FormGroup {\n    return this.fb.group({\n      id: [lote.id],\n      nome: [lote.nome, Validators.required],\n      quantidade: [lote.quantidade, Validators.required],\n      preco: [lote.preco, Validators.required],\n      dataInicio: [lote.dataInicio],\n      dataFim: [lote.dataFim]\n    });\n  }\n\n  public mudarValorData(value: Date, indice: number, campo: string): void {\n    this.lotes.value[indice][campo] = value;\n  }\n\n  public retornaTituloLote(nome: string): string {\n    return nome === null || nome === '' ? 'Nome do lote' : nome;\n  }\n\n  public resetForm(): void {\n    this.form.reset();\n  }\n\n  public cssValidator(campoForm: FormControl | AbstractControl): any {\n    return {'is-invalid': campoForm.errors && campoForm.touched};\n  }\n\n  public salvarEvento(): void {\n    this.spinner.show();\n    if (this.form.valid) {\n\n      this.evento = (this.estadoSalvar === 'post')\n                ? {...this.form.value}\n                : {id: this.evento.id, ...this.form.value};\n\n      this.eventoService[this.estadoSalvar](this.evento).subscribe(\n        (eventoRetorno: Evento) => {\n          this.toastr.success('Evento salvo com Sucesso!', 'Sucesso');\n          this.router.navigate([`eventos/detalhe/${eventoRetorno.id}`]);\n        },\n        (error: any) => {\n          console.error(error);\n          this.spinner.hide();\n          this.toastr.error('Error ao salvar evento', 'Erro');\n        },\n        () => this.spinner.hide()\n      );\n    }\n  }\n\n  public salvarLotes(): void {\n    if (this.form.controls.lotes.valid) {\n      this.spinner.show();\n      this.loteService.saveLote(this.eventoId, this.form.value.lotes)\n        .subscribe(\n          () => {\n            this.toastr.success('Lotes salvos com Sucesso!', 'Sucesso!');\n          },\n          (error: any) => {\n            this.toastr.error('Erro ao tentar salvar lotes.', 'Erro');\n            console.error(error);\n          }\n        ).add(() => this.spinner.hide());\n    }\n  }\n\n  public removerLote(template: TemplateRef<any>,\n                     indice: number): void {\n\n    this.loteAtual.id = this.lotes.get(indice + '.id').value;\n    this.loteAtual.nome = this.lotes.get(indice + '.nome').value;\n    this.loteAtual.indice = indice;\n\n    this.modalRef = this.modalService.show(template, {class: 'modal-sm' });\n  }\n\n  confirmDeleteLote(): void {\n    this.modalRef.hide();\n    this.spinner.show();\n\n    this.loteService.deleteLote(this.eventoId, this.loteAtual.id)\n      .subscribe(\n        () => {\n          this.toastr.success('Lote deletado com sucesso', 'Sucesso');\n          this.lotes.removeAt(this.loteAtual.indice);\n        },\n        (error: any) => {\n          this.toastr.error(`Erro ao tentar deletar o Lote ${this.loteAtual.id}`, 'Erro');\n          console.error(error);\n        }\n      ).add(() => this.spinner.hide());\n  }\n\n  declineDeleteLote(): void {\n    this.modalRef.hide();\n  }\n\n}\n","<div class=\"card rounded shadow-sm\">\n  <form [formGroup]=\"form\">\n    <div class=\"p-3\">\n      <!-- <p>Form value: {{form.value | json}}</p>\n      <p>Form valid: {{form.status | json}}</p> -->\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-12\">\n          <label>Tema</label>\n          <input type=\"text\" class=\"form-control\" [ngClass]=\"cssValidator(f.tema)\"\n            formControlName=\"tema\" placeholder=\"Insira o Tema\">\n          <div *ngIf=\"f.tema.errors?.required\" class=\"invalid-feedback\">\n            Tema é obrigatório.\n          </div>\n          <div *ngIf=\"f.tema.errors?.minlength\" class=\"invalid-feedback\">\n            Tema deve ter no mínimo 4 caracteres.\n          </div>\n          <div *ngIf=\"f.tema.errors?.maxlength\" class=\"invalid-feedback\">\n            Tema deve ter no máximo 50 caracteres.\n          </div>\n          </div>\n          </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-8\">\n          <label>Local</label>\n          <input type=\"text\" class=\"form-control\" [ngClass]=\"cssValidator(f.local)\"\n            formControlName=\"local\" placeholder=\"\">\n          <div *ngIf=\"f.local.errors?.required && f.local.touched\" class=\"invalid-feedback\">\n            Local é obrigatório.\n          </div>\n        </div>\n        <div class=\"form-group col-md-4\">\n          <label>Data e Hora</label>\n          <input type=\"datetime\" class=\"form-control\"\n            [ngClass]=\"cssValidator(f.dataEvento)\"\n            value=\"{{evento.dataEvento | DateFormatPipe}}\"\n            bsDatepicker\n            [bsConfig]=\"bsConfig\"\n            formControlName=\"dataEvento\" placeholder=\"\">\n          <div *ngIf=\"f.dataEvento.errors?.required && f.dataEvento.touched\" class=\"invalid-feedback\">\n            Data e Hora é obrigatório.\n          </div>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-2\">\n          <label>Qtd Pessoas</label>\n          <input type=\"number\" class=\"form-control\" [ngClass]=\"cssValidator(f.qtdPessoas)\"\n            formControlName=\"qtdPessoas\" placeholder=\"\">\n          <div *ngIf=\"f.qtdPessoas.errors?.required && f.qtdPessoas.touched\" class=\"invalid-feedback\">\n            Qtd Pessoas é obrigatório.\n          </div>\n          <div *ngIf=\"f.qtdPessoas.errors?.max && f.qtdPessoas.touched\" class=\"invalid-feedback\">\n            Qtd Pessoas deve ser menor que 120000.\n          </div>\n          </div>\n          <div class=\"form-group col-md-2\">\n            <label>Telefone</label>\n            <input type=\"text\" class=\"form-control\" [ngClass]=\"cssValidator(f.telefone)\"\n              formControlName=\"telefone\" placeholder=\"(000) 90000-0000\">\n            <div *ngIf=\"f.telefone.errors?.required && f.telefone.touched\" class=\"invalid-feedback\">\n              Telefone é obrigatório.\n            </div>\n          </div>\n          <div class=\"form-group col-md-4\">\n            <label>e-mail</label>\n            <input type=\"text\" class=\"form-control\" [ngClass]=\"cssValidator(f.email)\"\n              formControlName=\"email\" placeholder=\"e-mail\">\n            <div *ngIf=\"f.email.errors?.required && f.email.touched\" class=\"invalid-feedback\">\n              e-mail é obrigatório.\n            </div>\n            <div *ngIf=\"f.email.errors?.email && f.email.touched\" class=\"invalid-feedback\">\n              Deve ser um endereço de e-mail válido\n            </div>\n        </div>\n        <div class=\"form-group col-md-4\">\n          <label>Imagem</label>\n          <input type=\"text\" class=\"form-control\" [ngClass]=\"cssValidator(f.imagemURL)\"\n            formControlName=\"imagemURL\" placeholder=\"imagem\">\n          <div *ngIf=\"f.imagemURL.errors?.required && f.imagemURL.touched\" class=\"invalid-feedback\">\n            Imagem é obrigatório.\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"card-footer\">\n      <div class=\"d-flex\">\n        <button class=\"btn btn-outline-secondary mr-auto border\" (click)=\"resetForm()\">\n          Cancelar Alteração\n        </button>\n        <button class=\"btn btn-success\" [disabled]=\"!form.valid\" (click)=\"salvarEvento()\">\n          <!-- <span class=\"spinner-border spinner-border-sm mr-1\"></span> -->\n          Salvar Evento\n        </button>\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"card rounded shadow-sm mt-4\" *ngIf=\"modoEditar\">\n  <!-- <p>Form value: {{form.controls.lotes.value | json}}</p>\n  <p>Form valid: {{form.controls.lotes.status | json}}</p> -->\n  <div class=\"p-3\">\n    <div class=\"d-flex border-bottom\">\n      <h2 class=\"mr-auto\">\n        Lotes do Evento\n      </h2>\n      <h2>\n        <i class=\"fas fa-money-bill-wave\"></i>\n      </h2>\n    </div>\n    <p>Clique em Lote para adicionar e preencher novos Lotes</p>\n    <div class=\"form-row p-1\">\n      <div [formGroup]=\"form\" class=\"col\">\n        <div formArrayName=\"lotes\" *ngFor=\"let lote of lotes.controls; let i=index\">\n          <fieldset [formGroupName]=\"i\" class=\"form-group\">\n            <legend class=\"d-flex justify-content-between capitalize\">\n              {{ retornaTituloLote(lotes.get(i+'.nome').value) }}\n              <button (click)=\"removerLote(template, i)\"\n                class=\"p-2 btn btn-sm btn-outline-warning mb-1 d-flex\"\n                tooltip=\"Excluir Lote\"\n                [adaptivePosition]=\"false\"\n                [delay]=\"500\"\n                placement=\"left\">\n                <i class=\"fa fa-window-close my-1\"></i>\n                <b class=\"ml-1 d-none d-sm-block\">Excluir</b>\n              </button>\n            </legend>\n            <div class=\"row\">\n              <div class=\"form-group col-md-4\">\n                <label>Nome</label>\n                <input\n                  [ngClass]=\"cssValidator(lotes.get(i+'.nome'))\"\n                  type=\"text\"\n                  class=\"form-control\"\n                  formControlName=\"nome\"\n                  placeholder=\"Lote\">\n              </div>\n              <div class=\"form-group col-md-4\">\n                <label>Quantidade</label>\n                <input type=\"text\" class=\"form-control\"\n                  [ngClass]=\"cssValidator(lotes.get(i+'.quantidade'))\"\n                  formControlName=\"quantidade\"\n                  placeholder=\"000\">\n              </div>\n              <div class=\"form-group col-md-4\">\n                <label>Preço</label>\n                <input type=\"text\"\n                  currencyMask\n                  [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',', align: 'left' }\"\n                  class=\"form-control\"\n                  [ngClass]=\"cssValidator(lotes.get(i+'.preco'))\"\n                  formControlName=\"preco\"\n                  placeholder=\"R$ 0,00\">\n              </div>\n              <div class=\"form-group col-md-4\">\n                <label>Data Início</label>\n                <input type=\"datetime\" class=\"form-control\"\n                  bsDatepicker\n                  value=\"{{lotes.get(i+'.dataInicio').value | date:'dd/MM/yyyy'}}\"\n                  placeholder=\"01/01/2019\"\n                  (bsValueChange)=\"mudarValorData($event, i, 'dataInicio')\">\n              </div>\n              <div class=\"form-group col-md-4\">\n                <label>Data Fim</label>\n                <input type=\"datetime\" class=\"form-control\"\n                  bsDatepicker\n                  value=\"{{lotes.get(i+'.dataFim').value | date:'dd/MM/yyyy'}}\"\n                  placeholder=\"01/01/2019\"\n                  (bsValueChange)=\"mudarValorData($event, i, 'dataFim')\">\n              </div>\n            </div>\n          </fieldset>\n        </div>\n      </div>\n    </div>\n    <button (click)=\"adicionarLote()\" class=\"d-flex btn btn-outline-primary\">\n      <i class=\"fa fa-plus-circle my-1\"></i>\n      <b class=\"ml-1\">Lote</b>\n    </button>\n  </div>\n  <div class=\"card-footer\">\n    <div class=\"d-flex\">\n      <button class=\"btn btn-outline-secondary mr-auto border\">\n        Cancelar Alteração\n      </button>\n      <button [disabled]=\"!form.controls.lotes.valid\" (click)=\"salvarLotes()\" class=\"btn btn-success\">\n        Salvar Lotes\n      </button>\n    </div>\n  </div>\n</div>\n<br>\n\n<ng-template #template>\n  <div class=\"modal-body text-center\">\n    <p>Tem certeza que quer deletar o lote {{this.loteAtual.nome}}?</p>\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"confirmDeleteLote()\">Sim</button>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"declineDeleteLote()\">Não</button>\n  </div>\n</ng-template>\n","import { AbstractControl, FormGroup } from '@angular/forms';\n\nexport class ValidatorField {\n  static MustMatch(controlName: string, matchingControlName: string): any {\n    return (group: AbstractControl) => {\n      const formGroup = group as FormGroup;\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchingControlName];\n\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n        return null;\n      }\n\n      if (control.value !== matchingControl.value) {\n        matchingControl.setErrors({ mustMatch: true});\n      } else {\n        matchingControl.setErrors(null);\n      }\n\n      return null;\n    };\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ProEventos-App';\n}\n","<app-nav></app-nav>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n\n<ngx-spinner\n  bdColor=\"rgba(51,51,51,0.8)\"\n  size=\"medium\"\n  color=\"#fff\"\n  type=\"ball-scale-multiple\"\n>\n  <p style=\"font-size: 20px; color: white;\">Carregando...</p>\n</ngx-spinner>\n","<div class=\"d-flex p-3 my-3 text-white bg-secondary rounded shadow-sm\">\n  <div class=\"d-flex align-items-center mr-auto\">\n    <i class=\"{{iconClass}} mr-3\"></i>\n    <div class=\"lh-100\">\n      <h2 class=\"mb-0\">{{titulo}}</h2>\n      <small>{{subtitulo}}</small>\n    </div>\n  </div>\n  <div class=\"p-3\" *ngIf=\"botaoListar\">\n    <button class=\"btn btn-outline-light\" (click)=\"listar()\">\n      Listar {{titulo}}\n    </button>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-titulo',\n  templateUrl: './titulo.component.html',\n  styleUrls: ['./titulo.component.scss'],\n})\nexport class TituloComponent implements OnInit {\n  @Input() titulo: string;\n  @Input() iconClass = 'fa fa-user';\n  @Input() subtitulo = 'Desde 2021';\n  @Input() botaoListar = false;\n\n  constructor(private router: Router) {}\n\n  ngOnInit(): void {}\n\n  listar(): void {\n    this.router.navigate([`/${this.titulo.toLocaleLowerCase()}/lista`]);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\nimport { NgxCurrencyModule } from 'ngx-currency';\n\nimport { ToastrModule } from 'ngx-toastr';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ContatosComponent } from './components/contatos/contatos.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { EventosComponent } from './components/eventos/eventos.component';\nimport { PalestrantesComponent } from './components/palestrantes/palestrantes.component';\nimport { PerfilComponent } from './components/user/perfil/perfil.component';\nimport { NavComponent } from './shared/nav/nav.component';\nimport { TituloComponent } from './shared/titulo/titulo.component';\n\nimport { EventoService } from './services/evento.service';\nimport { LoteService } from './services/lote.service';\n\nimport { DateTimeFormatPipe } from './helpers/DateTimeFormat.pipe';\nimport { EventoDetalheComponent } from './components/eventos/evento-detalhe/evento-detalhe.component';\nimport { EventoListaComponent } from './components/eventos/evento-lista/evento-lista.component';\nimport { UserComponent } from './components/user/user.component';\nimport { LoginComponent } from './components/user/login/login.component';\nimport { RegistrationComponent } from './components/user/registration/registration.component';\n\ndefineLocale('pt-br', ptBrLocale);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EventosComponent,\n    PalestrantesComponent,\n    ContatosComponent,\n    DashboardComponent,\n    PerfilComponent,\n    NavComponent,\n    TituloComponent,\n    DateTimeFormatPipe,\n    EventoDetalheComponent,\n    EventoListaComponent,\n    UserComponent,\n    LoginComponent,\n    RegistrationComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    CollapseModule.forRoot(),\n    TooltipModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    ModalModule.forRoot(),\n    ToastrModule.forRoot({\n      timeOut: 4000,\n      positionClass: 'toast-bottom-right',\n      preventDuplicates: true,\n      progressBar: true\n    }),\n    NgxSpinnerModule,\n    NgxCurrencyModule\n  ],\n  providers: [\n    EventoService,\n    LoteService\n  ],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"d-flex align-items-center vh-100\">\n\n  <div class=\"mx-auto text-center shadow-sm bg-white rounded p-5 my-5\">\n\n    <form class=\"form-signin\">\n      <i class=\"fa fa-users mb-2\"></i>\n      <h1 class=\"h3 mb-3 font-weight-normal\">Entrar com</h1>\n      <label for=\"username\" class=\"sr-only\">Usuário</label>\n      <input type=\"email\" id=\"username\" class=\"form-control\" placeholder=\"Usuário\" name=\"username\" required>\n      <label for=\"password\" class=\"sr-only\">Password</label>\n      <input type=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Senha\" name=\"password\" required>\n      <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Entrar</button>\n      <p class=\"mt-4 mb-2 text-muted\">Não tem login? Cadastre-se abaixo</p>\n      <a class=\"btn btn-lg btn-link btn-block\" routerLink=\"/user/registration\">Quero me cadastrar</a>\n    </form>\n\n  </div>\n\n</div>\n","import { Evento } from './../models/Evento';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n@Injectable(\n// { providedIn: 'root'}\n)\nexport class EventoService {\n  baseURL = 'https://localhost:5001/api/eventos';\n\n  constructor(private http: HttpClient) { }\n\n  public getEventos(): Observable<Evento[]> {\n    return this.http.get<Evento[]>(this.baseURL).pipe(take(1));\n  }\n\n  public getEventosByTema(tema: string): Observable<Evento[]> {\n    return this.http\n      .get<Evento[]>(`${this.baseURL}/${tema}/tema`)\n      .pipe(take(1));\n  }\n\n  public getEventoById(id: number): Observable<Evento> {\n    return this.http\n      .get<Evento>(`${this.baseURL}/${id}`)\n      .pipe(take(1));\n  }\n\n  public post(evento: Evento): Observable<Evento> {\n    return this.http\n      .post<Evento>(this.baseURL, evento)\n      .pipe(take(1));\n  }\n\n  public put(evento: Evento): Observable<Evento> {\n    return this.http\n      .put<Evento>(`${this.baseURL}/${evento.id}`, evento)\n      .pipe(take(1));\n  }\n\n  public deleteEvento(id: number): Observable<any> {\n    return this.http\n      .delete(`${this.baseURL}/${id}`)\n      .pipe(take(1));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-palestrantes',\n  templateUrl: './palestrantes.component.html',\n  styleUrls: ['./palestrantes.component.scss']\n})\nexport class PalestrantesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-titulo [titulo]=\"'Palestrantes'\"></app-titulo>\n","import { ValidatorField } from './../../../helpers/ValidatorField';\nimport { Component, OnInit } from '@angular/core';\nimport { AbstractControlOptions, FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-perfil',\n  templateUrl: './perfil.component.html',\n  styleUrls: ['./perfil.component.scss']\n})\nexport class PerfilComponent implements OnInit {\n\n  form!: FormGroup;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.validation();\n  }\n\n  private validation(): void {\n    const formOptions: AbstractControlOptions = {\n      validators: ValidatorField.MustMatch('senha', 'confirmeSenha')\n    };\n\n    this.form = this.fb.group({\n      titulo: ['', Validators.required],\n      primeiroNome: ['', Validators.required],\n      ultimoNome: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      telefone: ['', [Validators.required]],\n      descricao: ['', Validators.required],\n      funcao: ['', Validators.required],\n      senha: ['', [Validators.minLength(6), Validators.nullValidator]],\n      confirmeSenha: ['', Validators.nullValidator]\n    }, formOptions);\n  }\n\n  // Conveniente para pegar um FormField apenas com a letra F\n  get f(): any { return this.form.controls; }\n\n  onSubmit(): void {\n\n    // Vai parar aqui se o form estiver inválido\n    if (this.form.invalid) {\n      return;\n    }\n  }\n\n  public resetForm(event: any): void {\n    event.preventDefault();\n    this.form.reset();\n  }\n}\n","<app-titulo [titulo]=\"'Perfil'\" [iconClass]=\"'fa fa-address-card'\"></app-titulo>\n<div class=\"card rounded shadow-sm\">\n  <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"row p-3\">\n      <div class=\"col-lg-3 pt-1\">\n        <div class=\"card mb-3\">\n          <div class=\"card-header\"></div>\n          <div class=\"d-flex align-self-center pt-3\">\n            <a href=\"#aboutModal\" data-toggle=\"modal\" data-target=\"#myModal\">\n              <img\n              src=\"https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcRbezqZpEuwGSvitKy3wrwnth5kysKdRqBW54cAszm_wiutku3R\"\n              name=\"aboutme\" width=\"120\" height=\"120\" class=\"rounded-circle\">\n            </a>\n          </div>\n          <div class=\"card-body\">\n            <div class=\"h4 text-center mb-3\">@LeeCross</div>\n            <div class=\"h7 text-bold pb-1\"><b>Nome:</b> Miracles Lee Cross</div>\n            <div class=\"h7\">\n              Developer of web applications, JavaScript, PHP, Java, Python, Ruby, Java, Node.js,\n              etc.\n            </div>\n          </div>\n          <ul class=\"list-group list-group-flush\">\n            <li class=\"list-group-item\">\n              <div class=\"row\">\n                <div class=\"col-6 text-center border-right\">\n                  <div class=\"h5\">1342</div>\n                  <div class=\"h6 text-muted\">Eventos Ministrados</div>\n                </div>\n                <div class=\"col-6 text-center\">\n                  <div class=\"h5\">1342</div>\n                  <div class=\"h6 text-muted\">Eventos Participados</div>\n                </div>\n              </div>\n            </li>\n          </ul>\n          <div class=\"card-footer\"></div>\n        </div>\n      </div>\n      <div class=\"col-lg-9\">\n        <div class=\"form-row\">\n          <div class=\"form-group col-12\">\n            <h3 class=\"border-bottom\">Detalhe Perfil</h3>\n          </div>\n          <div class=\"form-group col\">\n            <label>Título</label>\n            <select formControlName=\"titulo\" class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': f.titulo.errors && f.titulo.touched }\">\n            <option value=\"\"></option>\n            <option value=\"0\">Não Quero</option>\n            <option value=\"Senhorita\">Tecnólogo(a)</option>\n            <option value=\"Senhorita\">Bacharel</option>\n            <option value=\"Senhorita\">Especialista</option>\n            <option value=\"Senhorita\">Pós Graduado(a)</option>\n            <option value=\"Senhorita\">Mestre</option>\n            <option value=\"Senhorita\">Doutor(a)</option>\n            <option value=\"Senhorita\">Pós Doc</option>\n          </select>\n          <div *ngIf=\"f.titulo.errors && f.titulo.touched\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.titulo.errors.required\">Título é obrigatório</div>\n          </div>\n        </div>\n        <div class=\"form-group col-sm-5\">\n          <label>Primeiro Nome</label>\n          <input type=\"text\" formControlName=\"primeiroNome\" class=\"form-control\"\n          [ngClass]=\"{ 'is-invalid': f.primeiroNome.errors && f.primeiroNome.touched }\" />\n          <div *ngIf=\"f.primeiroNome.errors && f.primeiroNome.touched\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.primeiroNome.errors.required\">Primeiro nome é obrigatório</div>\n          </div>\n        </div>\n        <div class=\"form-group col-sm-5\">\n          <label>Último nome</label>\n          <input type=\"text\" formControlName=\"ultimoNome\" class=\"form-control\"\n          [ngClass]=\"{ 'is-invalid': f.ultimoNome.errors && f.ultimoNome.touched }\" />\n          <div *ngIf=\"f.ultimoNome.errors && f.ultimoNome.touched\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.ultimoNome.errors.required\">Último nome é obrigatório</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-sm-5\">\n          <label>E-mail</label>\n          <input type=\"text\" formControlName=\"email\" class=\"form-control\"\n          [ngClass]=\"{ 'is-invalid': f.email.errors && f.email.touched }\" />\n          <div *ngIf=\"f.email.errors && f.email.touched\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.email.errors.required\">e-mail é obrigatório</div>\n            <div *ngIf=\"f.email.errors.email\">e-mail precisa ser um endereço válido.</div>\n          </div>\n        </div>\n        <div class=\"form-group col-sm-4\">\n          <label>Telefone</label>\n          <input type=\"text\" formControlName=\"telefone\" class=\"form-control\"\n          [ngClass]=\"{ 'is-invalid': f.telefone.errors && f.telefone.touched }\" />\n          <div *ngIf=\"f.telefone.errors && f.telefone.touched\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.telefone.errors.required\">Telefone é obrigatório</div>\n          </div>\n        </div>\n        <div class=\"form-group col-sm\">\n          <label>Função</label>\n          <select formControlName=\"funcao\" class=\"form-control\"\n          [ngClass]=\"{ 'is-invalid': f.funcao.errors && f.funcao.touched }\">\n          <option value=\"\"></option>\n          <option value=\"Participante\">Participante</option>\n          <option value=\"Palestrante\">Palestrante</option>\n        </select>\n        <div *ngIf=\"f.funcao.errors && f.funcao.touched\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.funcao.errors.required\">função é obrigatório é obrigatório</div>\n        </div>\n      </div>\n      <form-group class=\"col-12\">\n        <label>Descrição</label>\n        <input type=\"text\" formControlName=\"descricao\" class=\"form-control\"\n        [ngClass]=\"{ 'is-invalid': f.descricao.errors && f.descricao.touched }\" />\n        <div *ngIf=\"f.descricao.errors && f.descricao.touched\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.descricao.errors.required\">Descrição é obrigatório</div>\n        </div>\n      </form-group>\n    </div>\n    <div>\n      <h3 class=\"pt-3 border-bottom\">Mudar Senha</h3>\n      <p>Caso mude de senha, preencha os campos abaixo:</p>\n    </div>\n    <div class=\"form-row\">\n      <div class=\"form-group col-sm\">\n        <label>Senha</label>\n        <input type=\"password\" formControlName=\"senha\" class=\"form-control\"\n        [ngClass]=\"{ 'is-invalid': f.senha.errors && f.senha.touched }\" />\n        <div *ngIf=\"f.senha.errors && f.senha.touched\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.senha.errors.required\">Senha é obrigatório</div>\n          <div *ngIf=\"f.senha.errors.minlength\">Senha precisa ter pelo menos 6 caracteres</div>\n        </div>\n      </div>\n      <div class=\"form-group col-sm\">\n        <label>Confirmar Senha</label>\n        <input type=\"password\" formControlName=\"confirmeSenha\" class=\"form-control\"\n        [ngClass]=\"{ 'is-invalid': f.confirmeSenha.errors && f.confirmeSenha.touched }\" />\n        <div *ngIf=\"f.confirmeSenha.errors && f.confirmeSenha.touched\" class=\"invalid-feedback\">\n          <div *ngIf=\"f.confirmeSenha.errors.required\">Confirmação de senha é Obrigatório</div>\n          <div *ngIf=\"f.confirmeSenha.errors.mustMatch\">Repedir a senha é obrigatório.</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"card-footer\">\n  <div class=\"d-flex\">\n    <button (click)=\"resetForm($event)\" class=\"btn btn-outline-secondary mr-auto border\">\n      Cancelar Alteração\n    </button>\n    <button class=\"btn btn-success\">\n      Salvar Alteração\n    </button>\n  </div>\n</div>\n</form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { PalestrantesComponent } from './components/palestrantes/palestrantes.component';\n\nimport { EventosComponent } from './components/eventos/eventos.component';\nimport { EventoDetalheComponent } from './components/eventos/evento-detalhe/evento-detalhe.component';\nimport { EventoListaComponent } from './components/eventos/evento-lista/evento-lista.component';\n\nimport { UserComponent } from './components/user/user.component';\nimport { LoginComponent } from './components/user/login/login.component';\nimport { RegistrationComponent } from './components/user/registration/registration.component';\nimport { PerfilComponent } from './components/user/perfil/perfil.component';\n\nimport { ContatosComponent } from './components/contatos/contatos.component';\n\nconst routes: Routes = [\n  {\n    path: 'user', component: UserComponent,\n    children: [\n      { path: 'login', component: LoginComponent },\n      { path: 'registration', component: RegistrationComponent },\n    ]\n  },\n  {\n    path: 'user/perfil', component: PerfilComponent\n  },\n  { path: 'eventos', redirectTo: 'eventos/lista' },\n  {\n    path: 'eventos', component: EventosComponent,\n    children: [\n      { path: 'detalhe/:id', component: EventoDetalheComponent },\n      { path: 'detalhe', component: EventoDetalheComponent },\n      { path: 'lista', component: EventoListaComponent },\n    ],\n  },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'palestrantes', component: PalestrantesComponent },\n  { path: 'contatos', component: ContatosComponent },\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full' },\n  { path: '**', redirectTo: 'dashboard', pathMatch: 'full' },\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n\t<router-outlet></router-outlet>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}